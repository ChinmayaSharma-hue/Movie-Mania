{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"E:/Web Dev/Django, freecodecamp/Dev2/venv/src/movie_db_site/movie-recommendation-site/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRouteRegex = getRouteRegex;\nexports.getNamedRouteRegex = getNamedRouteRegex;\nexports.getMiddlewareRegex = getMiddlewareRegex;\nexports.getNamedMiddlewareRegex = getNamedMiddlewareRegex;\n\nvar _escapeRegexp = require(\"../../escape-regexp\");\n\nvar _removeTrailingSlash = require(\"./remove-trailing-slash\");\n\nfunction getRouteRegex(normalizedRoute) {\n  var _getParametrizedRoute = getParametrizedRoute(normalizedRoute),\n      parameterizedRoute = _getParametrizedRoute.parameterizedRoute,\n      groups = _getParametrizedRoute.groups;\n\n  return {\n    re: new RegExp(\"^\".concat(parameterizedRoute, \"(?:/)?$\")),\n    groups: groups\n  };\n}\n\nfunction getNamedRouteRegex(normalizedRoute) {\n  var result = getNamedParametrizedRoute(normalizedRoute);\n  return _objectSpread(_objectSpread({}, getRouteRegex(normalizedRoute)), {}, {\n    namedRegex: \"^\".concat(result.namedParameterizedRoute, \"(?:/)?$\"),\n    routeKeys: result.routeKeys\n  });\n}\n\nfunction getParametrizedRoute(route) {\n  var segments = (0, _removeTrailingSlash).removeTrailingSlash(route).slice(1).split(\"/\");\n  var groups = {};\n  var groupIndex = 1;\n  return {\n    parameterizedRoute: segments.map(function (segment) {\n      if (segment.startsWith(\"[\") && segment.endsWith(\"]\")) {\n        var _parseParameter = parseParameter(segment.slice(1, -1)),\n            key = _parseParameter.key,\n            optional = _parseParameter.optional,\n            repeat = _parseParameter.repeat;\n\n        groups[key] = {\n          pos: groupIndex++,\n          repeat: repeat,\n          optional: optional\n        };\n        return repeat ? optional ? \"(?:/(.+?))?\" : \"/(.+?)\" : \"/([^/]+?)\";\n      } else {\n        return \"/\".concat((0, _escapeRegexp).escapeStringRegexp(segment));\n      }\n    }).join(\"\"),\n    groups: groups\n  };\n}\n\nfunction getNamedParametrizedRoute(route) {\n  var segments = (0, _removeTrailingSlash).removeTrailingSlash(route).slice(1).split(\"/\");\n  var getSafeRouteKey = buildGetSafeRouteKey();\n  var routeKeys = {};\n  return {\n    namedParameterizedRoute: segments.map(function (segment) {\n      if (segment.startsWith(\"[\") && segment.endsWith(\"]\")) {\n        var _parseParameter2 = parseParameter(segment.slice(1, -1)),\n            key = _parseParameter2.key,\n            optional = _parseParameter2.optional,\n            repeat = _parseParameter2.repeat; // replace any non-word characters since they can break\n        // the named regex\n\n\n        var cleanedKey = key.replace(/\\W/g, \"\");\n        var invalidKey = false; // check if the key is still invalid and fallback to using a known\n        // safe key\n\n        if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n          invalidKey = true;\n        }\n\n        if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n          invalidKey = true;\n        }\n\n        if (invalidKey) {\n          cleanedKey = getSafeRouteKey();\n        }\n\n        routeKeys[cleanedKey] = key;\n        return repeat ? optional ? \"(?:/(?<\".concat(cleanedKey, \">.+?))?\") : \"/(?<\".concat(cleanedKey, \">.+?)\") : \"/(?<\".concat(cleanedKey, \">[^/]+?)\");\n      } else {\n        return \"/\".concat((0, _escapeRegexp).escapeStringRegexp(segment));\n      }\n    }).join(\"\"),\n    routeKeys: routeKeys\n  };\n}\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route. Examples:\n *   - `[...slug]` -> `{ name: 'slug', repeat: true, optional: true }`\n *   - `[foo]` -> `{ name: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ name: 'bar', repeat: false, optional: false }`\n */\n\n\nfunction parseParameter(param) {\n  var optional = param.startsWith(\"[\") && param.endsWith(\"]\");\n\n  if (optional) {\n    param = param.slice(1, -1);\n  }\n\n  var repeat = param.startsWith(\"...\");\n\n  if (repeat) {\n    param = param.slice(3);\n  }\n\n  return {\n    key: param,\n    repeat: repeat,\n    optional: optional\n  };\n}\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */\n\n\nfunction buildGetSafeRouteKey() {\n  var routeKeyCharCode = 97;\n  var routeKeyCharLength = 1;\n  return function () {\n    var routeKey = \"\";\n\n    for (var i = 0; i < routeKeyCharLength; i++) {\n      routeKey += String.fromCharCode(routeKeyCharCode);\n      routeKeyCharCode++;\n\n      if (routeKeyCharCode > 122) {\n        routeKeyCharLength++;\n        routeKeyCharCode = 97;\n      }\n    }\n\n    return routeKey;\n  };\n}\n\nfunction getMiddlewareRegex(normalizedRoute, options) {\n  var _getParametrizedRoute2 = getParametrizedRoute(normalizedRoute),\n      parameterizedRoute = _getParametrizedRoute2.parameterizedRoute,\n      groups = _getParametrizedRoute2.groups;\n\n  var _ref = options != null ? options : {},\n      _ref$catchAll = _ref.catchAll,\n      catchAll = _ref$catchAll === void 0 ? true : _ref$catchAll;\n\n  if (parameterizedRoute === \"/\") {\n    var catchAllRegex = catchAll ? \".*\" : \"\";\n    return {\n      groups: {},\n      re: new RegExp(\"^/\".concat(catchAllRegex, \"$\"))\n    };\n  }\n\n  var catchAllGroupedRegex = catchAll ? \"(?:(/.*)?)\" : \"\";\n  return {\n    groups: groups,\n    re: new RegExp(\"^\".concat(parameterizedRoute).concat(catchAllGroupedRegex, \"$\"))\n  };\n}\n\nfunction getNamedMiddlewareRegex(normalizedRoute, options) {\n  var _getParametrizedRoute3 = getParametrizedRoute(normalizedRoute),\n      parameterizedRoute = _getParametrizedRoute3.parameterizedRoute;\n\n  var _options$catchAll = options.catchAll,\n      catchAll = _options$catchAll === void 0 ? true : _options$catchAll;\n\n  if (parameterizedRoute === \"/\") {\n    var catchAllRegex = catchAll ? \".*\" : \"\";\n    return {\n      namedRegex: \"^/\".concat(catchAllRegex, \"$\")\n    };\n  }\n\n  var _getNamedParametrized = getNamedParametrizedRoute(normalizedRoute),\n      namedParameterizedRoute = _getNamedParametrized.namedParameterizedRoute;\n\n  var catchAllGroupedRegex = catchAll ? \"(?:(/.*)?)\" : \"\";\n  return {\n    namedRegex: \"^\".concat(namedParameterizedRoute).concat(catchAllGroupedRegex, \"$\")\n  };\n}","map":{"version":3,"mappings":"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","names":["getRouteRegex","getNamedRouteRegex","getMiddlewareRegex","getNamedMiddlewareRegex","normalizedRoute","getParametrizedRoute","parameterizedRoute","groups","re","RegExp","result","getNamedParametrizedRoute","namedRegex","namedParameterizedRoute","routeKeys","route","segments","removeTrailingSlash","slice","split","groupIndex","map","segment","startsWith","endsWith","parseParameter","key","optional","repeat","pos","escapeStringRegexp","join","getSafeRouteKey","buildGetSafeRouteKey","cleanedKey","replace","invalidKey","length","isNaN","parseInt","param","routeKeyCharCode","routeKeyCharLength","routeKey","i","String","fromCharCode","options","catchAll","catchAllRegex","catchAllGroupedRegex"],"sources":["../../../../../shared/lib/router/utils/route-regex.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}
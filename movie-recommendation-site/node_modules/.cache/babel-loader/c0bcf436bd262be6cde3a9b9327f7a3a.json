{"ast":null,"code":"import _slicedToArray from\"E:/Web Dev/project/trydjango/src/movie_db_site/movie-recommendation-site/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext,useEffect,useState}from\"react\";import Header from\"../components/Header\";import Titlebar from\"../components/Titlebar\";import bladeRunner from\"../images/blade-runner3.png\";import MoviesBoard from\"../components/MoviesBoard\";import Search from\"../components/Search\";import\"../style.css\";import axios from\"axios\";import northman from\"../images/northman.jpg\";import stalker from\"../images/stalker.jpg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Movies(){cat_to_image={\"Popular Films\":bladeRunner,\"In Theaters\":northman,\"Top Rated Films\":stalker};var api_url='http://127.0.0.1:8000/api/movie-list/';var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),search=_React$useState2[0],setSearch=_React$useState2[1];var _useState=useState(null),_useState2=_slicedToArray(_useState,2),product=_useState2[0],setProduct=_useState2[1];useEffect(function(){axios.get(api_url).then(function(response){setProduct(response.data);});},[api_url]);if(product){var moviesList=[];var category;for(var i=0;i<product.length;i++){moviesList.push(product[i]);category=product[i].category;}return/*#__PURE__*/_jsxs(\"div\",{className:\"moviespage\",children:[/*#__PURE__*/_jsx(Header,{search:search,setSearch:setSearch}),/*#__PURE__*/_jsx(Titlebar,{image:cat_to_image[category],firstline:category,movieTitle:\"Blade Runner\",movieYear:1982,top:\"70px\",height:\"40px\"}),/*#__PURE__*/_jsx(Search,{state:search,setState:setSearch,page:window.location.href}),/*#__PURE__*/_jsx(MoviesBoard,{movies:moviesList})]});}}","map":{"version":3,"names":["React","useContext","useEffect","useState","Header","Titlebar","bladeRunner","MoviesBoard","Search","axios","northman","stalker","Movies","cat_to_image","api_url","search","setSearch","product","setProduct","get","then","response","data","moviesList","category","i","length","push","window","location","href"],"sources":["E:/Web Dev/project/trydjango/src/movie_db_site/movie-recommendation-site/src/pages/Movies.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Titlebar from \"../components/Titlebar\";\r\nimport bladeRunner from \"../images/blade-runner3.png\"\r\nimport MoviesBoard from \"../components/MoviesBoard\";\r\nimport Search from \"../components/Search\";\r\nimport \"../style.css\"\r\nimport axios from \"axios\";\r\nimport northman from \"../images/northman.jpg\"\r\nimport stalker from \"../images/stalker.jpg\"\r\n\r\nexport default function Movies() {\r\n    cat_to_image = {\r\n        \"Popular Films\": bladeRunner,\r\n        \"In Theaters\": northman,\r\n        \"Top Rated Films\": stalker\r\n    }\r\n\r\n\r\n    const api_url = 'http://127.0.0.1:8000/api/movie-list/'\r\n    const [search, setSearch] = React.useState(0);\r\n    const [product, setProduct] = useState(null)\r\n\r\n    useEffect(() => {\r\n        axios.get(api_url).then(\r\n            response => {\r\n                setProduct(response.data)\r\n            }\r\n        )\r\n    }, [api_url])\r\n\r\n    if (product) {\r\n        let moviesList = [];\r\n        let category;\r\n        for (let i = 0; i < product.length; i++) {\r\n            moviesList.push(product[i])\r\n            category = product[i].category\r\n        }\r\n        return (\r\n            <div className=\"moviespage\">\r\n                <Header search={search} setSearch={setSearch} />\r\n                <Titlebar image={cat_to_image[category]} firstline={category} movieTitle={\"Blade Runner\"}\r\n                    movieYear={1982} top={\"70px\"} height={\"40px\"} />\r\n                < Search state={search} setState={setSearch} page={window.location.href} />\r\n                <MoviesBoard movies={moviesList} />\r\n            </div>\r\n        )\r\n    }\r\n}"],"mappings":"8JAAA,MAAOA,MAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,CAAuCC,QAAvC,KAAuD,OAAvD,CACA,MAAOC,OAAP,KAAmB,sBAAnB,CACA,MAAOC,SAAP,KAAqB,wBAArB,CACA,MAAOC,YAAP,KAAwB,6BAAxB,CACA,MAAOC,YAAP,KAAwB,2BAAxB,CACA,MAAOC,OAAP,KAAmB,sBAAnB,CACA,MAAO,cAAP,CACA,MAAOC,MAAP,KAAkB,OAAlB,CACA,MAAOC,SAAP,KAAqB,wBAArB,CACA,MAAOC,QAAP,KAAoB,uBAApB,C,wFAEA,cAAe,SAASC,OAAT,EAAkB,CAC7BC,YAAY,CAAG,CACX,gBAAiBP,WADN,CAEX,cAAeI,QAFJ,CAGX,kBAAmBC,OAHR,CAAf,CAOA,GAAMG,QAAO,CAAG,uCAAhB,CACA,oBAA4Bd,KAAK,CAACG,QAAN,CAAe,CAAf,CAA5B,oDAAOY,MAAP,qBAAeC,SAAf,qBACA,cAA8Bb,QAAQ,CAAC,IAAD,CAAtC,wCAAOc,OAAP,eAAgBC,UAAhB,eAEAhB,SAAS,CAAC,UAAM,CACZO,KAAK,CAACU,GAAN,CAAUL,OAAV,EAAmBM,IAAnB,CACI,SAAAC,QAAQ,CAAI,CACRH,UAAU,CAACG,QAAQ,CAACC,IAAV,CAAV,CACH,CAHL,EAKH,CANQ,CAMN,CAACR,OAAD,CANM,CAAT,CAQA,GAAIG,OAAJ,CAAa,CACT,GAAIM,WAAU,CAAG,EAAjB,CACA,GAAIC,SAAJ,CACA,IAAK,GAAIC,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGR,OAAO,CAACS,MAA5B,CAAoCD,CAAC,EAArC,CAAyC,CACrCF,UAAU,CAACI,IAAX,CAAgBV,OAAO,CAACQ,CAAD,CAAvB,EACAD,QAAQ,CAAGP,OAAO,CAACQ,CAAD,CAAP,CAAWD,QAAtB,CACH,CACD,mBACI,aAAK,SAAS,CAAC,YAAf,wBACI,KAAC,MAAD,EAAQ,MAAM,CAAET,MAAhB,CAAwB,SAAS,CAAEC,SAAnC,EADJ,cAEI,KAAC,QAAD,EAAU,KAAK,CAAEH,YAAY,CAACW,QAAD,CAA7B,CAAyC,SAAS,CAAEA,QAApD,CAA8D,UAAU,CAAE,cAA1E,CACI,SAAS,CAAE,IADf,CACqB,GAAG,CAAE,MAD1B,CACkC,MAAM,CAAE,MAD1C,EAFJ,cAII,KAAE,MAAF,EAAS,KAAK,CAAET,MAAhB,CAAwB,QAAQ,CAAEC,SAAlC,CAA6C,IAAI,CAAEY,MAAM,CAACC,QAAP,CAAgBC,IAAnE,EAJJ,cAKI,KAAC,WAAD,EAAa,MAAM,CAAEP,UAArB,EALJ,GADJ,CASH,CACJ"},"metadata":{},"sourceType":"module"}
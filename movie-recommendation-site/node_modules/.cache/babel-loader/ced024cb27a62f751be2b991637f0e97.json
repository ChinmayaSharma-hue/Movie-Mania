{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"E:/Web Dev/project/trydjango/src/movie_db_site/movie-recommendation-site/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _createForOfIteratorHelper = require(\"E:/Web Dev/project/trydjango/src/movie_db_site/movie-recommendation-site/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPathMatch = getPathMatch;\n\nvar _pathToRegexp = require(\"next/dist/compiled/path-to-regexp\");\n\nfunction getPathMatch(path, options) {\n  var keys = [];\n  var regexp = (0, _pathToRegexp).pathToRegexp(path, keys, {\n    delimiter: \"/\",\n    sensitive: false,\n    strict: options == null ? void 0 : options.strict\n  });\n  var matcher = (0, _pathToRegexp).regexpToFunction((options == null ? void 0 : options.regexModifier) ? new RegExp(options.regexModifier(regexp.source), regexp.flags) : regexp, keys);\n  /**\n  * A matcher function that will check if a given pathname matches the path\n  * given in the builder function. When the path does not match it will return\n  * `false` but if it does it will return an object with the matched params\n  * merged with the params provided in the second argument.\n  */\n\n  return function (pathname, params) {\n    var res = pathname == null ? false : matcher(pathname);\n\n    if (!res) {\n      return false;\n    }\n    /**\n    * If unnamed params are not allowed they must be removed from\n    * the matched parameters. path-to-regexp uses \"string\" for named and\n    * \"number\" for unnamed parameters.\n    */\n\n\n    if (options == null ? void 0 : options.removeUnnamedParams) {\n      var _iterator = _createForOfIteratorHelper(keys),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var key = _step.value;\n\n          if (typeof key.name === \"number\") {\n            delete res.params[key.name];\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    return _objectSpread(_objectSpread({}, params), res.params);\n  };\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;QA2BgBA;;AA1Ba,iBAAmC,WAAnC,mCAAmC,CAAnC;;AA0BtB,SAASA,YAAT,CAAsBC,IAAtB,EAAoCC,OAApC,EAAuD;EAC5D,IAAMC,IAAI,GAAU,EAApB;EACA,IAAMC,MAAM,GAAGC,mBAIbA,YAJaA,CAAaJ,IAAbI,EAAmBF,IAAnBE,EAAyB;IACtCC,SAAS,EAAE,GAD2B;IAEtCC,SAAS,EAAE,KAF2B;IAGtCC,MAAM,EAAEN,OAAO,QAAPA,mBAAO,CAAEM;EAHqB,CAAzBH,CAAf;EAMA,IAAMI,OAAO,GAAGC,mBAKfA,gBALeA,CACdR,QAAO,QAAPA,mBAAO,CAAES,aAATT,IACI,IAAIU,MAAJ,CAAWV,OAAO,CAACS,aAART,CAAsBE,MAAM,CAACS,MAA7BX,CAAX,EAAiDE,MAAM,CAACU,KAAxD,CADJZ,GAEIE,MAHUM,EAIdP,IAJcO,CAAhB;EAOA;;;;;;;EAMA,OAAO,UACLK,QADK,EAELC,MAFK,EAGS;IACd,IAAMC,GAAG,GAAGF,QAAQ,IAAI,IAAZA,GAAmB,KAAnBA,GAA2BN,OAAO,CAACM,QAAD,CAA9C;;IACA,IAAI,CAACE,GAAL,EAAU;MACR,OAAO,KAAP;IACD;IAED;;;;;;;IAKA,IAAIf,OAAO,QAAPA,mBAAO,CAAEgB,mBAAb,EAAkC;MAAA,2CACdf,IADc;MAAA;;MAAA;QAChC,oDAAwB;UAAA,IAAbgB,GAAa;;UACtB,IAAI,OAAOA,GAAG,CAACC,IAAX,KAAoB,QAAxB,EAAkC;YAChC,OAAOH,GAAI,CAACD,MAAL,CAAoBG,GAAG,CAACC,IAAxB,CAAP;UACD;QACF;MAL+B;QAAA;MAAA;QAAA;MAAA;IAMjC;;IAED,uCAAYJ,MAAZ,GAAuBC,GAAG,CAACD,MAA3B;EACD,CAvBD;AAwBD","names":["getPathMatch","path","options","keys","regexp","pathToRegexp","delimiter","sensitive","strict","matcher","regexpToFunction","regexModifier","RegExp","source","flags","pathname","params","res","removeUnnamedParams","key","name"],"sources":["../../../../../shared/lib/router/utils/path-match.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}